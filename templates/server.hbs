/* This file was generated by typetether */
/* tslint:disable */

import Ajv from 'ajv';
{{#each actions}}
import {{{actionName}}}Unwrapped from '{{{importPath}}}';
{{/each}}

const ajv = new Ajv();
const actions = {
{{#each actions}}
  {{actionName}},
{{/each}}
};

type GetOptions <F> = F extends (options: infer G, ...rest: any[]) => any ? G : undefined;
type GetRest<F> = F extends (options: any, ...rest: infer G) => any ? G : undefined;
type GenericAction<R> = (...args: any[]) => R;
type ActionIndex = typeof actions;
type ActionName = keyof ActionIndex;

export function isAction(actionName: unknown): actionName is ActionName {
  return typeof actionName === 'string' && actions.hasOwnProperty(actionName);
}

{{#each actions}}
{{#if hasOptions}}
const {{{actionName}}}OptionsSchema = {{{optionsSchemaString}}};
const {{{actionName}}}ValidateOptions = ajv.compile({ ...{{{actionName}}}OptionsSchema, $async: true });

{{/if}}
{{#if hasResult}}
  {{#if validateResult}}
const {{{actionName}}}ResultSchema = {{{resultSchemaString}}};
const {{{actionName}}}ValidateResult = ajv.compile({ ...{{{actionName}}}ResultSchema, $async: true });
  {{/if}}
{{/if}}
{{{actionName}}}.hasOptions = {{#if hasOptions}}true{{else}}false{{/if}};
{{{actionName}}}.hasResult = {{#if hasResult}}true{{else}}false{{/if}};
export async function {{{actionName}}}({{#if hasOptions}}rawOptions{{else}}_{{/if}}: unknown, ...rest: {{#if hasOptions}}GetRest<typeof {{{actionName}}}Unwrapped>{{else}}Parameters<typeof {{{actionName}}}Unwrapped>{{/if}}): ReturnType<typeof {{{actionName}}}Unwrapped> {
  const actionFn: GenericAction<{{#if hasResult}}ReturnType<typeof {{{actionName}}}Unwrapped>{{else}}undefined{{/if}}> = {{{actionName}}}Unwrapped;
  {{#if hasOptions}}
  const options: GetOptions<typeof {{{actionName}}}Unwrapped> = await {{{actionName}}}ValidateOptions(rawOptions);
  {{/if}}
  {{#if hasResult}}const rawResult = {{/if}}await actionFn({{#if hasOptions}}options, {{/if}}...rest);
  {{#if hasResult}}
    {{#if validateResult}}
  return await {{{actionName}}}ValidateResult(rawResult);
    {{else}}
  return rawResult;
    {{/if}}
  {{/if}}
}

{{/each}}
export default actions;
